{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport axios from \"axios\";\nimport { useNavigation } from '@react-navigation/core';\nexport default function Login() {\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var login = function login() {\n    var collection;\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            collection = {};\n            collection.email = email;\n            collection.password = password;\n            axios.post(\"http://192.168.200.32:4000/login\", collection).then(function (res) {\n              if (res.data === \"User not exist\" || res.data === \"Password mismatch\") {\n                alert(res.data);\n              } else {\n                localStorage.setItem('auth', JSON.stringify(res.data));\n                navigation.navigate(\"drawer\");\n              }\n            }).catch(function (err) {\n              console.error(err.message);\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var create = function create() {\n    navigation.navigate(\"register\");\n  };\n\n  var _Dimensions$get = Dimensions.get('window'),\n      width = _Dimensions$get.width,\n      height = _Dimensions$get.height;\n\n  return React.createElement(ScrollView, {\n    style: {\n      width: width,\n      backgroundColor: \"white\",\n      padding: 15,\n      height: height,\n      paddingTop: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      borderColor: \"gray\",\n      borderWidth: 1,\n      borderRadius: 8,\n      paddingVertical: 20,\n      paddingHorizontal: 20\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      fontSize: 22,\n      fontWeight: \"700\"\n    }\n  }, \"SignIn\"), React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      fontSize: 16,\n      paddingVertical: 5,\n      color: \"gray\"\n    }\n  }, \"SignIn to read exclusive and premium stories from The Taiping Times\"), React.createElement(View, {\n    style: {\n      paddingHorizontal: 20,\n      paddingVertical: 10\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Enter email...\",\n    style: {\n      borderColor: \"gray\",\n      borderBottomWidth: 1,\n      borderRadius: 8,\n      paddingVertical: 9,\n      paddingLeft: 10,\n      borderRadius: 6,\n      marginTop: 5,\n      fontSize: 16,\n      color: \"black\"\n    },\n    value: email,\n    onChangeText: function onChangeText(txt) {\n      return setEmail(txt);\n    }\n  })), React.createElement(View, {\n    style: {\n      paddingHorizontal: 20,\n      paddingVertical: 10\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Enter password...\",\n    style: {\n      borderColor: \"gray\",\n      borderBottomWidth: 1,\n      borderRadius: 8,\n      paddingVertical: 9,\n      paddingLeft: 10,\n      borderRadius: 6,\n      marginTop: 5,\n      fontSize: 16,\n      color: \"black\"\n    },\n    value: password,\n    onChangeText: function onChangeText(txt) {\n      return setPassword(txt);\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: {\n      paddingHorizontal: 20,\n      paddingVertical: 20,\n      marginTop: 10\n    },\n    onPress: login\n  }, React.createElement(Text, {\n    style: {\n      backgroundColor: \"hsl(206,100%,52%)\",\n      borderRadius: 8,\n      paddingVertical: 9,\n      textAlign: \"center\",\n      fontSize: 18,\n      color: \"white\"\n    }\n  }, \"Login\")), React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      marginVertical: 15\n    }\n  }, React.createElement(Text, {\n    style: {\n      borderColor: \"gray\",\n      borderWidth: 1,\n      borderRadius: 100,\n      width: 40,\n      fontSize: 20,\n      height: 40,\n      paddingHorizontal: 10,\n      paddingVertical: 5\n    }\n  }, \"or\")), React.createElement(View, null, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      fontSize: 18,\n      color: \"gray\",\n      paddingVertical: 10\n    }\n  }, \"Don't have an account?\"), React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      fontSize: 18,\n      color: \"hsl(206,100%,52%)\"\n    },\n    onPress: create\n  }, \"Create One Now\"))));\n}\n;","map":{"version":3,"sources":["C:/Users/Cleverso/NewsApp/NewsApplication/components/user/login.js"],"names":["React","useState","axios","useNavigation","Login","navigation","email","setEmail","password","setPassword","login","collection","post","then","res","data","alert","localStorage","setItem","JSON","stringify","navigate","catch","err","console","error","message","create","Dimensions","get","width","height","backgroundColor","padding","paddingTop","borderColor","borderWidth","borderRadius","paddingVertical","paddingHorizontal","textAlign","fontSize","fontWeight","color","borderBottomWidth","paddingLeft","marginTop","txt","alignItems","marginVertical"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, Dimensions, ScrollView } from \"react-native\";\r\nimport axios from \"axios\";\r\nimport { useNavigation } from '@react-navigation/core';\r\n\r\nexport default function Login() {\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const [email,setEmail] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n\r\n    const login = async() => {\r\n        const collection = {};\r\n        collection.email = email;\r\n        collection.password = password;\r\n        axios.post(\"http://192.168.200.32:4000/login\",collection).then(res => {\r\n            if(res.data === \"User not exist\" || res.data === \"Password mismatch\") {\r\n                alert(res.data);\r\n            } else {\r\n                localStorage.setItem('auth',JSON.stringify(res.data));\r\n                navigation.navigate(\"drawer\");\r\n            }\r\n        }).catch(err =>{\r\n            console.error(err.message);\r\n        })\r\n    }\r\n\r\n    const create = () => {\r\n        navigation.navigate(\"register\");\r\n    }\r\n\r\n    const {width,height} = Dimensions.get('window');\r\n\r\n  return (\r\n    <ScrollView style={{width: width,backgroundColor:\"white\",padding:15,height: height,paddingTop:25}}>\r\n        <View style={{borderColor:\"gray\",borderWidth:1,borderRadius:8,paddingVertical:20,paddingHorizontal:20}}>\r\n            <Text style={{textAlign:\"center\",fontSize:22,fontWeight:\"700\"}}>SignIn</Text>\r\n            <Text style={{textAlign:\"center\",fontSize:16,paddingVertical:5,color:\"gray\"}}>SignIn to read exclusive and premium stories from The Taiping Times</Text>\r\n            <View style={{paddingHorizontal:20,paddingVertical:10}}>\r\n                <TextInput \r\n                placeholder=\"Enter email...\" \r\n                style={{borderColor:\"gray\",borderBottomWidth:1,borderRadius:8,paddingVertical:9,paddingLeft:10,borderRadius:6,marginTop:5,fontSize:16,color:\"black\"}} \r\n                value={email}\r\n                onChangeText={txt => setEmail(txt)}\r\n                />\r\n            </View>\r\n            <View style={{paddingHorizontal:20,paddingVertical:10}}>\r\n                <TextInput \r\n                placeholder=\"Enter password...\" \r\n                style={{borderColor:\"gray\",borderBottomWidth:1,borderRadius:8,paddingVertical:9,paddingLeft:10,borderRadius:6,marginTop:5,fontSize:16,color:\"black\"}} \r\n                value={password}\r\n                onChangeText={txt => setPassword(txt)}\r\n                />\r\n            </View>\r\n            <TouchableOpacity \r\n            style={{paddingHorizontal:20,paddingVertical:20,marginTop:10}}\r\n            onPress={login}\r\n            >\r\n                <Text style={{backgroundColor:\"hsl(206,100%,52%)\",borderRadius:8,paddingVertical:9,textAlign:\"center\",fontSize:18,color:\"white\"}}>Login</Text>\r\n            </TouchableOpacity>\r\n            <View style={{alignItems:\"center\",marginVertical:15}}>\r\n                <Text style={{borderColor:\"gray\",borderWidth:1,borderRadius:100,width:40,fontSize:20,height:40,paddingHorizontal:10,paddingVertical:5}}>or</Text>\r\n            </View>\r\n            <View>\r\n                <Text style={{textAlign:\"center\",fontSize:18,color:\"gray\",paddingVertical:10}} >Don't have an account?</Text>\r\n                <Text style={{textAlign:\"center\",fontSize:18,color:\"hsl(206,100%,52%)\"}} onPress={create} >Create One Now</Text>\r\n            </View>\r\n        </View>\r\n    </ScrollView>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}